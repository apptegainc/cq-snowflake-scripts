CREATE OR REPLACE STORAGE INTEGRATION s3_snowflake_integration_for_azure
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = S3
  ENABLED = TRUE
  -- STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::374490517493:role/snowflake_access'
  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::374490517493:role/my-snowflake-role'
  STORAGE_ALLOWED_LOCATIONS = ('*');


CREATE OR REPLACE STAGE s3_stage_from_azure
  URL='s3://cq-poc/connectors/azure/azure_storage_containers/'
  STORAGE_INTEGRATION = s3_snowflake_integration_for_azure
  FILE_FORMAT = json_load_format;


create or replace TABLE CLOUDQUERY.PUBLIC.CLOUDQUERY_AZURE_STORAGE_CONTAINERS (
	SNOWPIPE_SYNC_TS TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	_CQ_ID VARCHAR(16777216),
	_CQ_PARENT_ID VARCHAR(16777216),
	_CQ_SOURCE_NAME VARCHAR(16777216),
	_CQ_SYNC_TIME TIMESTAMP_NTZ(9),
	ETAG VARCHAR(16777216),
	ID VARCHAR(16777216),
	NAME VARCHAR(16777216),
	PROPERTIES VARIANT,
	SUBSCRIPTION_ID VARCHAR(16777216),
	TYPE VARCHAR(16777216)
);

create or replace pipe CLOUDQUERY.PUBLIC.CLOUDQUERY_AZURE_STORAGE_CONTAINERS_PIPE auto_ingest=true as COPY INTO cloudquery.public.CLOUDQUERY_AZURE_STORAGE_CONTAINERS
FROM @s3_stage_from_azure
FILE_FORMAT = (type = 'JSON')
MATCH_BY_COLUMN_NAME='CASE_INSENSITIVE'
INCLUDE_METADATA = (SNOWPIPE_SYNC_TS = METADATA$START_SCAN_TIME);